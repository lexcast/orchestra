{"version":3,"sources":["components/Player.js","components/Ensemble.js","components/Details.js","components/List.js","components/Progress.js","components/App.js","serviceWorker.js","index.js"],"names":["Player","player","audio","setPlayer","setPlaying","delay","className","title","onClick","window","MIDI","start","setTimeout","current","play","pause","stop","currentTime","Ensemble","song","playing","ensemble","ensembles","style","display","gridTemplateColumns","gridTemplateRows","width","height","Object","entries","tracks","map","inst","track","split","i","p","section","name","instrument","instruments","pos","positions","j","includes","toString","key","gridArea","transition","transform","alt","src","process","Details","composer","composers","number","city","year","href","midi_url","target","rel","midi_author","List","music","Progress","useState","progress","setProgress","useEffect","audioCur","update","duration","addEventListener","removeEventListener","keys","DEFAULT_SONG","length","Math","random","App","setSong","useRef","handleEnd","useCallback","songId","autoplay","removeListener","Audio","loadFile","midi","byNote","trackNotes","trackingMap","forEach","groups","push","parseInt","g","n","addListener","data","on","message","note","BPM","loadPlugin","onsuccess","setVolume","timeWarp","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bf0855b9.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Player = ({ player, audio, setPlayer, setPlaying, delay }) => {\n  return (\n    <div className=\"flex my-4 items-center justify-center text-lg\">\n      {player !== \"PLAYING\" && (\n        <button\n          title=\"Play\"\n          className=\"focus:outline-none appearance-none px-2 m-1 h-8 hover:text-black flex items-center justify-center text-gray-600\"\n          onClick={() => {\n            if (player === \"STOPED\") {\n              window.MIDI.Player.start();\n              setTimeout(() => {\n                audio.current.play();\n              }, delay);\n            } else {\n              window.MIDI.Player.start();\n              audio.current.play();\n            }\n            setPlayer(\"PLAYING\");\n          }}\n        >\n          Play\n        </button>\n      )}\n      {player === \"PLAYING\" && (\n        <button\n          className=\"focus:outline-none appearance-none px-2 m-1 h-8 hover:text-black flex items-center justify-center text-gray-600\"\n          onClick={() => {\n            window.MIDI.Player.pause();\n            audio.current.pause();\n            setPlayer(\"PAUSED\");\n          }}\n        >\n          Pause\n        </button>\n      )}\n      {player !== \"STOPED\" && (\n        <button\n          className=\"focus:outline-none appearance-none px-2 m-1 h-8 hover:text-black flex items-center justify-center text-gray-600\"\n          onClick={() => {\n            window.MIDI.Player.stop();\n            audio.current.pause();\n            audio.current.currentTime = 0;\n            setPlaying({});\n            setPlayer(\"STOPED\");\n          }}\n        >\n          Stop\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\nimport instruments from \"data/instruments\";\nimport ensembles from \"data/ensembles\";\n\nconst image = (key) =>\n  `${process.env.PUBLIC_URL}/images/instruments/${key}.png`;\n\nconst Ensemble = ({ song, playing }) => {\n  const ensemble = ensembles[song.ensemble];\n\n  return (\n    <div\n      className=\"md:p-10 lg:p-20 lg:-mt-10\"\n      style={{\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(50, 1fr)\",\n        gridTemplateRows: \"repeat(35, 1fr)\",\n        width: \"80vw\",\n        height: \"56vw\",\n      }}\n    >\n      {Object.entries(song.tracks).map(([inst, track]) => {\n        const [i, p] = inst.split(\"|\");\n        const section = ensemble[i];\n        const name = section.instrument || i;\n        const instrument = instruments[name];\n        const pos = p ? p.split(\",\") : false;\n\n        return section.positions.map((p, j) => {\n          if (pos && !pos.includes(j.toString())) {\n            return null;\n          }\n\n          return (\n            <div\n              key={j}\n              className=\"flex items-center justify-center\"\n              style={{\n                gridArea: `${p[0]} / ${p[1]} / ${p[0] + instrument[0]} / ${\n                  p[1] + instrument[1]\n                }`,\n              }}\n            >\n              <img\n                style={{\n                  transition: \"transform .1s ease\",\n                  transform: playing[track] ? \"scale(1.2)\" : \"scale(1)\",\n                }}\n                alt={name}\n                className=\"max-w-full max-h-full\"\n                src={image(name)}\n              />\n            </div>\n          );\n        });\n      })}\n    </div>\n  );\n};\n\nexport default Ensemble;\n","import React from \"react\";\nimport composers from \"data/composers\";\n\nconst image = (key) => `${process.env.PUBLIC_URL}/images/composers/${key}.jpg`;\n\nconst Details = ({ song }) => {\n  const composer = composers[song.composer];\n\n  return (\n    <div className=\"text-center mb-4 relative md:absolute top-0 right-0 md:m-4 opacity-50 hover:opacity-100 w-full md:w-auto\">\n      <h1 className=\"text-lg font-bold\">{song.title}</h1>\n      <h2 className=\"text-base\">\n        {song.key} - {song.number}\n      </h2>\n      <p className=\"text-sm\">\n        {song.city}, {song.year}\n      </p>\n      <div className=\"w-10 h-10 m-auto flex items-center\">\n        <img\n          alt={composer.name}\n          src={image(song.composer)}\n          className=\"max-h-full max-w-full\"\n        />\n      </div>\n      <h2 className=\"text-base font-semibold\">{composer.name}</h2>\n      <p className=\"text-sm\">\n        {composer.city}, {composer.year}\n      </p>\n      <p className=\"text-sm\">\n        by{\" \"}\n        <a\n          className=\"text-purple-600 font-bold hover:text-purple-700\"\n          href={song.midi_url}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {song.midi_author}\n        </a>\n      </p>\n    </div>\n  );\n};\n\nexport default Details;\n","import React from \"react\";\nimport composers from \"data/composers\";\nimport music from \"data/music\";\n\nconst List = ({ song, onClick }) => {\n  return (\n    <div className=\"mb-6 text-left relative md:absolute max-w-xl top-0 left-0 md:m-4 max-w-xl md:w-auto\">\n      {Object.entries(music).map(([key, { title, composer }]) => (\n        <div\n          key={key}\n          onClick={() => onClick(key)}\n          className={\n            \"cursor-pointer py-1\" +\n            (song === key ? \"\" : \" opacity-50 hover:opacity-100\")\n          }\n        >\n          <h1 className=\"font-semibold text-base\">{title}</h1>\n          <h2 className=\"text-sm\">{composers[composer].name}</h2>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default List;\n","import React, { useEffect, useState } from \"react\";\n\nconst Progress = ({ song, audio }) => {\n  const [progress, setProgress] = useState(0);\n\n  useEffect(() => {\n    const audioCur = audio.current;\n    const update = () => {\n      setProgress((audioCur.currentTime / audioCur.duration) * 100);\n    };\n\n    if (audioCur) {\n      audioCur.addEventListener(\"timeupdate\", update);\n    }\n\n    return () => {\n      if (audioCur) {\n        audioCur.removeEventListener(\"timeupdate\", update);\n      }\n    };\n  }, [audio, song]);\n\n  return (\n    <div className=\"w-64 h-px bg-gray-400\">\n      <div className=\"h-px bg-black\" style={{ width: progress + \"%\" }}></div>\n    </div>\n  );\n};\n\nexport default Progress;\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport music from \"data/music\";\nimport Player from \"./Player\";\nimport Ensemble from \"./Ensemble\";\nimport Details from \"./Details\";\nimport List from \"./List\";\nimport Progress from \"./Progress\";\n// import { start, check } from \"utils/stopwatch\";\n\nconst midi = (key) => `${process.env.PUBLIC_URL}/midi/${key}.mid`;\nconst mp3 = (key) => `${process.env.PUBLIC_URL}/mp3/${key}.mp3`;\n\nconst keys = Object.keys(music);\nconst DEFAULT_SONG = keys[(keys.length * Math.random()) << 0];\n// const DEFAULT_SONG = \"beethoven_symphony_5_1\";\n\nconst App = () => {\n  const [playing, setPlaying] = useState({});\n  const [player, setPlayer] = useState(\"LOADING\");\n  const [song, setSong] = useState(DEFAULT_SONG);\n  const audio = useRef();\n\n  const handleEnd = useCallback(() => {\n    setPlayer(\"STOPED\");\n  }, []);\n\n  const play = useCallback(\n    (songId, autoplay) => {\n      window.MIDI.Player.removeListener();\n      window.MIDI.Player.stop();\n      if (audio.current) {\n        audio.current.removeEventListener(\"ended\", handleEnd);\n        audio.current.pause();\n        audio.current.currentTime = 0;\n      }\n      setPlayer(\"LOADING\");\n      setPlaying({});\n      setSong(songId);\n      audio.current = new Audio(mp3(songId));\n      audio.current.addEventListener(\"ended\", handleEnd);\n\n      window.MIDI.Player.loadFile(midi(songId), () => {\n        // start();\n        if (autoplay) {\n          window.MIDI.Player.start();\n          setTimeout(() => {\n            audio.current.play();\n          }, music[songId].delay);\n          setPlayer(\"PLAYING\");\n        } else {\n          setPlayer(\"STOPED\");\n        }\n      });\n\n      const byNote = music[songId].trackNotes;\n      const trackingMap = {};\n      const tracks = [];\n      if (byNote) {\n        Object.entries(byNote).forEach(([track, groups]) => {\n          tracks.push(parseInt(track));\n          Object.entries(groups).forEach(([g, notes]) => {\n            notes.forEach((n) => (trackingMap[`${track}.${n}`] = g));\n          });\n        });\n      }\n\n      window.MIDI.Player.addListener((data) => {\n        const on = data.message === 144 ? true : false;\n        // console.log(check());\n        setPlaying((playing) => ({\n          ...playing,\n          [tracks.includes(data.track)\n            ? trackingMap[`${data.track}.${data.note}`]\n            : data.track]: on,\n          d: on,\n        }));\n      });\n    },\n    [handleEnd]\n  );\n\n  useEffect(() => {\n    window.MIDI.Player.BPM = null;\n\n    window.MIDI.loadPlugin({\n      onsuccess: function () {\n        for (var i = 0; i <= 15; i++) {\n          window.MIDI.setVolume(i, 0);\n        }\n        const player = window.MIDI.Player;\n        player.timeWarp = 1;\n\n        play(DEFAULT_SONG, false);\n      },\n    });\n\n    return () => {\n      if (audio.current) {\n        audio.current.removeEventListener(\"ended\", handleEnd);\n        audio.current.pause();\n      }\n      window.MIDI.Player.removeListener();\n      window.MIDI.Player.stop();\n    };\n  }, [play, handleEnd]);\n\n  return (\n    <div className=\"bg-yellow-100 font-cursive text-center min-h-screen w-screen flex items-center justify-center flex-col\">\n      <Ensemble {...{ playing, song: music[song] }} />\n      {player !== \"LOADING\" && (\n        <>\n          <Progress {...{ audio, song }} />\n          <Player\n            {...{\n              player,\n              setPlayer,\n              setPlaying,\n              audio,\n              delay: music[song].delay,\n            }}\n          />\n        </>\n      )}\n      <Details song={music[song]} />\n      <List\n        song={song}\n        onClick={(songId) => {\n          play(songId, true);\n        }}\n      />\n      <div className=\"border-t border-gray-300 p-4 w-full text-center m-1 font-sans text-xs text-gray-600 font-normal\">\n        <div>Icons made by <a href=\"https://www.flaticon.com/authors/smashicons\" title=\"Smashicons\">Smashicons</a> from <a href=\"https://www.flaticon.com/\"     title=\"Flaticon\">www.flaticon.com</a></div><div>Icons made by <a href=\"https://www.flaticon.com/authors/nikita-golubev\" title=\"Nikita Golubev\">Nikita Golubev</a> from <a href=\"https://www.flaticon.com/\"     title=\"Flaticon\">www.flaticon.com</a></div><div>Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\"     title=\"Flaticon\">www.flaticon.com</a></div><div>Icons made by <a href=\"https://www.flaticon.com/authors/pongsakornred\" title=\"pongsakornRed\">pongsakornRed</a> from <a href=\"https://www.flaticon.com/\"     title=\"Flaticon\">www.flaticon.com</a></div><div>Icons made by <a href=\"https://www.flaticon.com/authors/mynamepong\" title=\"mynamepong\">mynamepong</a> from <a href=\"https://www.flaticon.com/\"     title=\"Flaticon\">www.flaticon.com</a></div><div>Icons made by <a href=\"https://www.flaticon.com/authors/photo3idea-studio\" title=\"photo3idea_studio\">photo3idea_studio</a> from <a href=\"https://www.flaticon.com/\"     title=\"Flaticon\">www.flaticon.com</a></div><div>Icons made by <a href=\"https://www.flaticon.com/authors/good-ware\" title=\"Good Ware\">Good Ware</a> from <a href=\"https://www.flaticon.com/\"     title=\"Flaticon\">www.flaticon.com</a></div><div>Icons made by <a href=\"https://www.flaticon.com/authors/vitaly-gorbachev\" title=\"Vitaly Gorbachev\">Vitaly Gorbachev</a> from <a href=\"https://www.flaticon.com/\"     title=\"Flaticon\">www.flaticon.com</a></div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"styles/index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}